//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Transformer.java
//

#ifndef Transformer_H
#define Transformer_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class BrComMobilemindJ2objcHttpResponse;
@class GsonFieldNamingPolicy;
@class GsonGson;
@class GsonJsonArray;
@class GsonJsonObject;
@class IOSClass;
@class JavaUtilLoggingLogger;
@class OrgJsonJSONArray;
@class OrgJsonJSONObject;
@protocol JavaLangReflectType;
@protocol JavaUtilList;

@interface BrComMobilemindJ2objcHttpTransformer : NSObject
@property (readonly, class) JavaUtilLoggingLogger *logger NS_SWIFT_NAME(logger);
@property (copy, class) NSString *GSON_TIMESTAMP_FORMAT NS_SWIFT_NAME(GSON_TIMESTAMP_FORMAT);
@property (class) GsonFieldNamingPolicy *GSON_NAMING_CONVENTION NS_SWIFT_NAME(GSON_NAMING_CONVENTION);

+ (JavaUtilLoggingLogger *)logger;

+ (NSString *)GSON_TIMESTAMP_FORMAT;

+ (void)setGSON_TIMESTAMP_FORMAT:(NSString *)value;

+ (GsonFieldNamingPolicy *)GSON_NAMING_CONVENTION;

+ (void)setGSON_NAMING_CONVENTION:(GsonFieldNamingPolicy *)value;

#pragma mark Public

- (instancetype __nonnull)init;

- (GsonJsonObject *)errorJson;

- (id)errorObjectWithIOSClass:(IOSClass *)clazz;

- (id)errorObjectWithIOSClass:(IOSClass *)clazz
                 withGsonGson:(GsonGson *)gson;

- (NSString *)errorString;

- (GsonJsonObject *)json;

- (GsonJsonArray *)jsonArray;

- (id<JavaUtilList>)list;

- (id<JavaUtilList>)listWithJavaLangReflectType:(id<JavaLangReflectType>)typeToken;

- (id<JavaUtilList>)listWithJavaLangReflectType:(id<JavaLangReflectType>)typeToken
                                   withGsonGson:(GsonGson *)gson;

- (GsonGson *)makeGson;

- (id)object;

- (id)objectWithIOSClass:(IOSClass *)clazz;

- (id)objectWithIOSClass:(IOSClass *)clazz
            withGsonGson:(GsonGson *)gson;

- (id)objectWithJavaLangReflectType:(id<JavaLangReflectType>)typeToken;

- (id)objectWithJavaLangReflectType:(id<JavaLangReflectType>)typeToken
                       withGsonGson:(GsonGson *)gson;

- (void)setGsonWithGsonGson:(GsonGson *)gson;

+ (void)setGsonNamingConventionWithGsonFieldNamingPolicy:(GsonFieldNamingPolicy *)gsonNamingConvention;

+ (void)setGsonTimestampFormatWithNSString:(NSString *)format;

- (void)setResponseWithBrComMobilemindJ2objcHttpResponse:(BrComMobilemindJ2objcHttpResponse *)response;

- (NSString *)string;

- (OrgJsonJSONArray *)toJSONArray;

- (OrgJsonJSONObject *)toJSONObject;

@end

J2OBJC_STATIC_INIT(BrComMobilemindJ2objcHttpTransformer)

inline JavaUtilLoggingLogger *BrComMobilemindJ2objcHttpTransformer_get_logger(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilLoggingLogger *BrComMobilemindJ2objcHttpTransformer_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(BrComMobilemindJ2objcHttpTransformer, logger, JavaUtilLoggingLogger *)

inline NSString *BrComMobilemindJ2objcHttpTransformer_get_GSON_TIMESTAMP_FORMAT(void);
inline NSString *BrComMobilemindJ2objcHttpTransformer_set_GSON_TIMESTAMP_FORMAT(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *BrComMobilemindJ2objcHttpTransformer_GSON_TIMESTAMP_FORMAT;
J2OBJC_STATIC_FIELD_OBJ(BrComMobilemindJ2objcHttpTransformer, GSON_TIMESTAMP_FORMAT, NSString *)

inline GsonFieldNamingPolicy *BrComMobilemindJ2objcHttpTransformer_get_GSON_NAMING_CONVENTION(void);
inline GsonFieldNamingPolicy *BrComMobilemindJ2objcHttpTransformer_set_GSON_NAMING_CONVENTION(GsonFieldNamingPolicy *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GsonFieldNamingPolicy *BrComMobilemindJ2objcHttpTransformer_GSON_NAMING_CONVENTION;
J2OBJC_STATIC_FIELD_OBJ(BrComMobilemindJ2objcHttpTransformer, GSON_NAMING_CONVENTION, GsonFieldNamingPolicy *)

FOUNDATION_EXPORT void BrComMobilemindJ2objcHttpTransformer_init(BrComMobilemindJ2objcHttpTransformer *self);

FOUNDATION_EXPORT BrComMobilemindJ2objcHttpTransformer *new_BrComMobilemindJ2objcHttpTransformer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT BrComMobilemindJ2objcHttpTransformer *create_BrComMobilemindJ2objcHttpTransformer_init(void);

FOUNDATION_EXPORT void BrComMobilemindJ2objcHttpTransformer_setGsonTimestampFormatWithNSString_(NSString *format);

FOUNDATION_EXPORT void BrComMobilemindJ2objcHttpTransformer_setGsonNamingConventionWithGsonFieldNamingPolicy_(GsonFieldNamingPolicy *gsonNamingConvention);

J2OBJC_TYPE_LITERAL_HEADER(BrComMobilemindJ2objcHttpTransformer)


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // Transformer_H
